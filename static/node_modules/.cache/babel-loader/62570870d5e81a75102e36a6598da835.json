{"ast":null,"code":"var _jsxFileName = \"/home/flash/Programming/Language/Web/chatapp/chat/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport io from \"socket.io-client\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nlet endPoint = \"http://127.0.0.1:5000/\";\nlet socket = io.connect(endPoint);\n\nfunction Chat() {\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  useEffect(() => {\n    getMessages();\n  }, [messages.length]);\n\n  const getMessages = () => {\n    socket.on(\"message\", msg => {\n      setMessages([...messages, msg]);\n    });\n  };\n\n  const onChange = e => {\n    var msg = e.target.value;\n    setMessage(msg);\n  };\n\n  const onClick = () => {\n    if (message != \"\") {\n      socket.emit(\"message\", message);\n      setMessages([...messages, message]);\n      setMessage(\"\");\n    } else {\n      alert(\"Please Add a Message\");\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, messages.length > 0 && messages.map(msg => React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, msg))), React.createElement(\"input\", {\n    value: message,\n    name: \"message\",\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: () => onClick(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Send\"));\n}\n\n;\nexport default Chat;","map":{"version":3,"sources":["/home/flash/Programming/Language/Web/chatapp/chat/src/App.js"],"names":["React","useState","useEffect","io","endPoint","socket","connect","Chat","messages","setMessages","message","setMessage","getMessages","length","on","msg","onChange","e","target","value","onClick","emit","alert","map"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,EAAP,MAAe,kBAAf;;AAEA,OAAO,WAAP;AAEA,IAAIC,QAAQ,GAAC,wBAAb;AACA,IAAIC,MAAM,GAACF,EAAE,CAACG,OAAH,CAAWF,QAAX,CAAX;;AACA,SAASG,IAAT,GAAe;AACd,QAAM,CAACC,QAAD,EAAUC,WAAV,IAAuBR,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAsBV,QAAQ,CAAC,EAAD,CAApC;AACAC,EAAAA,SAAS,CAAC,MAAI;AACbU,IAAAA,WAAW;AACX,GAFQ,EAEN,CAACJ,QAAQ,CAACK,MAAV,CAFM,CAAT;;AAGA,QAAMD,WAAW,GAAG,MAAM;AACzBP,IAAAA,MAAM,CAACS,EAAP,CAAU,SAAV,EAAqBC,GAAG,IAAI;AAC3BN,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAaO,GAAb,CAAD,CAAX;AACA,KAFD;AAGA,GAJD;;AAKA,QAAMC,QAAQ,GAAEC,CAAC,IAAI;AACpB,QAAIF,GAAG,GAACE,CAAC,CAACC,MAAF,CAASC,KAAjB;AACAR,IAAAA,UAAU,CAACI,GAAD,CAAV;AACA,GAHD;;AAIA,QAAMK,OAAO,GAAG,MAAM;AACtB,QAAGV,OAAO,IAAI,EAAd,EAAiB;AAChBL,MAAAA,MAAM,CAACgB,IAAP,CAAY,SAAZ,EAAsBX,OAAtB;AACAD,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAaE,OAAb,CAAD,CAAX;AACAC,MAAAA,UAAU,CAAC,EAAD,CAAV;AACA,KAJD,MAIK;AACJW,MAAAA,KAAK,CAAC,sBAAD,CAAL;AACA;AACA,GARD;;AAUA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCd,QAAQ,CAACK,MAAT,GAAgB,CAAhB,IAAqBL,QAAQ,CAACe,GAAT,CAAaR,GAAG,IACrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,GAAJ,CADA,CADqB,CADtB,EAMA;AAAO,IAAA,KAAK,EAAEL,OAAd;AAAuB,IAAA,IAAI,EAAC,SAA5B;AAAsC,IAAA,QAAQ,EAAEO,CAAC,IAAID,QAAQ,CAACC,CAAD,CAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANA,EAOA;AAAQ,IAAA,OAAO,EAAE,MAAMG,OAAO,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPA,CADD;AAWA;;AAAA;AACD,eAAeb,IAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport io from \"socket.io-client\";\nimport logo from './logo.svg';\nimport './App.css';\n\nlet endPoint=\"http://127.0.0.1:5000/\";\nlet socket=io.connect(endPoint);\nfunction Chat(){\n\tconst [messages,setMessages]=useState([]);\n\tconst [message, setMessage]=useState(\"\");\n\tuseEffect(()=>{\n\t\tgetMessages();\n\t}, [messages.length]);\n\tconst getMessages = () => {\n\t\tsocket.on(\"message\", msg => {\n\t\t\tsetMessages([...messages,msg]);\n\t\t});\n\t};\n\tconst onChange =e => {\n\t\tvar msg=e.target.value;\n\t\tsetMessage(msg);\n\t};\n\tconst onClick = () => {\n\tif(message != \"\"){\n\t\tsocket.emit(\"message\",message);\n\t\tsetMessages([...messages,message]);\n\t\tsetMessage(\"\");\n\t}else{\n\t\talert(\"Please Add a Message\");\n\t}\n\t};\n\n\treturn(\n\t\t<div>\n\t\t{messages.length>0 && messages.map(msg => (\n\t\t\t<div>\n\t\t\t<p>{msg}</p>\n\t\t\t</div>\n\t\t))}\n\t\t<input value={message} name=\"message\" onChange={e => onChange(e)} />\n\t\t<button onClick={() => onClick()}>Send</button>\n\t\t</div>\n\t);\n};\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}