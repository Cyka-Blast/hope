{"ast":null,"code":"var _jsxFileName = \"/home/flash/Programming/Language/Web/chatapp/chat/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport io from \"socket.io-client\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nlet endPoint = \"http://127.0.0.1:5000/\";\nlet socket = io.connect(endPoint);\n\nfunction Chat() {\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState({\n    text: \"\",\n    user: \"\"\n  });\n  useEffect(() => {\n    getMessages();\n  }, [messages.length]);\n\n  const getMessages = () => {\n    socket.on(\"message\", msg => {\n      setMessages([...messages, msg]);\n    });\n  };\n\n  const onChange = e => {\n    var msg = e.target.value;\n    setMessage({\n      text: msg,\n      user: \"current\"\n    });\n  };\n\n  const onClick = e => {\n    e.preventDefault();\n\n    if (message.text != \"\") {\n      socket.emit(\"message\", {\n        text: message.text,\n        user: \"other\"\n      });\n      setMessages([...messages, message]);\n      setMessage({\n        text: \"\",\n        user: \"\"\n      });\n    } else {\n      alert(\"Please Add a Message\");\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"nav\", {\n    className: \"navbar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"backbutton\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"#\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"\\u21E0\")), React.createElement(\"div\", {\n    className: \"navbar-brand\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"The Rapist or User\")), messages.length > 0 && messages.map(msg => React.createElement(\"div\", {\n    className: msg.user,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, msg.text))), React.createElement(\"form\", {\n    className: \"input\",\n    onSubmit: e => onClick(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    value: message.text,\n    name: \"message\",\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"submit-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Send\")));\n}\n\n;\nexport default Chat;","map":{"version":3,"sources":["/home/flash/Programming/Language/Web/chatapp/chat/src/App.js"],"names":["React","useState","useEffect","io","endPoint","socket","connect","Chat","messages","setMessages","message","setMessage","text","user","getMessages","length","on","msg","onChange","e","target","value","onClick","preventDefault","emit","alert","map"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,EAAP,MAAe,kBAAf;;AAEA,OAAO,WAAP;AAEA,IAAIC,QAAQ,GAAC,wBAAb;AACA,IAAIC,MAAM,GAACF,EAAE,CAACG,OAAH,CAAWF,QAAX,CAAX;;AACA,SAASG,IAAT,GAAe;AACd,QAAM,CAACC,QAAD,EAAUC,WAAV,IAAuBR,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAsBV,QAAQ,CAAC;AAACW,IAAAA,IAAI,EAAC,EAAN;AAAUC,IAAAA,IAAI,EAAC;AAAf,GAAD,CAApC;AACAX,EAAAA,SAAS,CAAC,MAAI;AACbY,IAAAA,WAAW;AACX,GAFQ,EAEN,CAACN,QAAQ,CAACO,MAAV,CAFM,CAAT;;AAGA,QAAMD,WAAW,GAAG,MAAM;AACzBT,IAAAA,MAAM,CAACW,EAAP,CAAU,SAAV,EAAqBC,GAAG,IAAI;AAC3BR,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAaS,GAAb,CAAD,CAAX;AACA,KAFD;AAGA,GAJD;;AAKA,QAAMC,QAAQ,GAAEC,CAAC,IAAI;AACpB,QAAIF,GAAG,GAACE,CAAC,CAACC,MAAF,CAASC,KAAjB;AACAV,IAAAA,UAAU,CAAC;AAACC,MAAAA,IAAI,EAACK,GAAN;AAAUJ,MAAAA,IAAI,EAAC;AAAf,KAAD,CAAV;AACA,GAHD;;AAIA,QAAMS,OAAO,GAAIH,CAAD,IAAO;AACtBA,IAAAA,CAAC,CAACI,cAAF;;AACD,QAAGb,OAAO,CAACE,IAAR,IAAgB,EAAnB,EAAsB;AACrBP,MAAAA,MAAM,CAACmB,IAAP,CAAY,SAAZ,EAAsB;AAACZ,QAAAA,IAAI,EAACF,OAAO,CAACE,IAAd;AAAmBC,QAAAA,IAAI,EAAC;AAAxB,OAAtB;AACAJ,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAaE,OAAb,CAAD,CAAX;AACAC,MAAAA,UAAU,CAAC;AAACC,QAAAA,IAAI,EAAC,EAAN;AAASC,QAAAA,IAAI,EAAC;AAAd,OAAD,CAAV;AACA,KAJD,MAIK;AACJY,MAAAA,KAAK,CAAC,sBAAD,CAAL;AACA;AACA,GATD;;AAWA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAG,IAAA,IAAI,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,CADD,EAIC;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJD,CADA,EAOCjB,QAAQ,CAACO,MAAT,GAAgB,CAAhB,IAAqBP,QAAQ,CAACkB,GAAT,CAAaT,GAAG,IACrC;AAAK,IAAA,SAAS,EAAEA,GAAG,CAACJ,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAII,GAAG,CAACL,IAAR,CADA,CADqB,CAPtB,EAYA;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAwB,IAAA,QAAQ,EAAGO,CAAD,IAAOG,OAAO,CAACH,CAAD,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAO,IAAA,KAAK,EAAET,OAAO,CAACE,IAAtB;AAA4B,IAAA,IAAI,EAAC,SAAjC;AAA2C,IAAA,QAAQ,EAAEO,CAAC,IAAID,QAAQ,CAACC,CAAD,CAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAEA;AAAQ,IAAA,SAAS,EAAC,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,CAZA,CADD;AAmBA;;AAAA;AACD,eAAeZ,IAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport io from \"socket.io-client\";\nimport logo from './logo.svg';\nimport './App.css';\n\nlet endPoint=\"http://127.0.0.1:5000/\";\nlet socket=io.connect(endPoint);\nfunction Chat(){\n\tconst [messages,setMessages]=useState([]);\n\tconst [message, setMessage]=useState({text:\"\", user:\"\"});\n\tuseEffect(()=>{\n\t\tgetMessages();\n\t}, [messages.length]);\n\tconst getMessages = () => {\n\t\tsocket.on(\"message\", msg => {\n\t\t\tsetMessages([...messages,msg]);\n\t\t});\n\t};\n\tconst onChange =e => {\n\t\tvar msg=e.target.value;\n\t\tsetMessage({text:msg,user:\"current\"});\n\t};\n\tconst onClick = (e) => {\n\t\te.preventDefault()\n\tif(message.text != \"\"){\n\t\tsocket.emit(\"message\",{text:message.text,user:\"other\"});\n\t\tsetMessages([...messages,message]);\n\t\tsetMessage({text:\"\",user:\"\"});\n\t}else{\n\t\talert(\"Please Add a Message\");\n\t}\n\t};\n\n\treturn(\n\t\t<div>\n\t\t<nav className=\"navbar\">\n\t\t\t<div className=\"backbutton\">\n\t\t\t<a href=\"#\">&#8672;</a>\n\t\t\t</div>\n\t\t\t<div className=\"navbar-brand\">The Rapist or User</div>\n\t\t</nav>\n\t\t{messages.length>0 && messages.map(msg => (\n\t\t\t<div className={msg.user}>\n\t\t\t<p>{msg.text}</p>\n\t\t\t</div>\n\t\t))}\n\t\t<form className=\"input\" onSubmit={(e) => onClick(e)}>\n\t\t<input value={message.text} name=\"message\" onChange={e => onChange(e)} />\n\t\t<button className=\"submit-button\" >Send</button>\n\t\t</form>\n\t\t</div>\n\t);\n};\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}