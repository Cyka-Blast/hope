{"ast":null,"code":"var _jsxFileName = \"/home/flash/Programming/Language/Web/chatapp/chat/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport io from \"socket.io-client\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nlet endPoint = \"http://127.0.0.1:5000/\";\nlet socket = io.connect(endPoint);\n\nfunction App() {\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [typing, setTyping] = useState(\"\");\n  useEffect(() => {\n    getMessages();\n  }, [messages.length]);\n  var timeout = undefined;\n\n  function timeoutFunction() {\n    timeout = setTimeout(getTyping, 5000);\n  }\n\n  const getMessages = () => {\n    socket.on(\"message\", msg => {\n      setMessages([...messages, msg]);\n    });\n  };\n\n  const getTyping = () => {\n    socket.on(\"typing\", type => {\n      setTyping(type);\n    });\n  };\n\n  const onChange = e => {\n    var msg = e.target.value;\n    setMessage(msg);\n\n    if (msg != \"\") {\n      socket.emit(\"typing\", \"***typing noises***\");\n    } else {\n      socket.emit(\"typing\", \"\");\n    }\n  };\n\n  const onClick = () => {\n    if (message != \"\") {\n      socket.emit(\"message\", message);\n      setMessages([...messages, message]);\n      setMessage(\"\");\n    } else {\n      alert(\"Please Add a Message\");\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, messages.length > 0 && messages.map(msg => React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, msg))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, typing)), React.createElement(\"input\", {\n    value: message,\n    name: \"message\",\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: () => onClick(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Send\"));\n}\n\n;\nexport default App;","map":{"version":3,"sources":["/home/flash/Programming/Language/Web/chatapp/chat/src/App.js"],"names":["React","useState","useEffect","io","endPoint","socket","connect","App","messages","setMessages","message","setMessage","typing","setTyping","getMessages","length","timeout","undefined","timeoutFunction","setTimeout","getTyping","on","msg","type","onChange","e","target","value","emit","onClick","alert","map"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,EAAP,MAAe,kBAAf;;AAEA,OAAO,WAAP;AAEA,IAAIC,QAAQ,GAAC,wBAAb;AACA,IAAIC,MAAM,GAACF,EAAE,CAACG,OAAH,CAAWF,QAAX,CAAX;;AACA,SAASG,GAAT,GAAc;AACb,QAAM,CAACC,QAAD,EAAUC,WAAV,IAAuBR,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAsBV,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACW,MAAD,EAAQC,SAAR,IAAmBZ,QAAQ,CAAC,EAAD,CAAjC;AACAC,EAAAA,SAAS,CAAC,MAAI;AACbY,IAAAA,WAAW;AACX,GAFQ,EAEN,CAACN,QAAQ,CAACO,MAAV,CAFM,CAAT;AAGA,MAAIC,OAAO,GAACC,SAAZ;;AACA,WAASC,eAAT,GAA0B;AACrBF,IAAAA,OAAO,GAAGG,UAAU,CAACC,SAAD,EAAY,IAAZ,CAApB;AACJ;;AACD,QAAMN,WAAW,GAAG,MAAM;AACzBT,IAAAA,MAAM,CAACgB,EAAP,CAAU,SAAV,EAAqBC,GAAG,IAAI;AAC3Bb,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAac,GAAb,CAAD,CAAX;AACA,KAFD;AAGA,GAJD;;AAKA,QAAMF,SAAS,GAAG,MAAM;AACvBf,IAAAA,MAAM,CAACgB,EAAP,CAAU,QAAV,EAAoBE,IAAI,IAAE;AACzBV,MAAAA,SAAS,CAACU,IAAD,CAAT;AACA,KAFD;AAGA,GAJD;;AAKA,QAAMC,QAAQ,GAAEC,CAAC,IAAI;AACpB,QAAIH,GAAG,GAACG,CAAC,CAACC,MAAF,CAASC,KAAjB;AACAhB,IAAAA,UAAU,CAACW,GAAD,CAAV;;AACA,QAAIA,GAAG,IAAE,EAAT,EAAY;AACXjB,MAAAA,MAAM,CAACuB,IAAP,CAAY,QAAZ,EAAqB,qBAArB;AACA,KAFD,MAEK;AACJvB,MAAAA,MAAM,CAACuB,IAAP,CAAY,QAAZ,EAAqB,EAArB;AACA;AACD,GARD;;AASA,QAAMC,OAAO,GAAG,MAAM;AACtB,QAAGnB,OAAO,IAAI,EAAd,EAAiB;AAChBL,MAAAA,MAAM,CAACuB,IAAP,CAAY,SAAZ,EAAsBlB,OAAtB;AACAD,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAaE,OAAb,CAAD,CAAX;AACAC,MAAAA,UAAU,CAAC,EAAD,CAAV;AACA,KAJD,MAIK;AACJmB,MAAAA,KAAK,CAAC,sBAAD,CAAL;AACA;AACA,GARD;;AAUA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCtB,QAAQ,CAACO,MAAT,GAAgB,CAAhB,IAAqBP,QAAQ,CAACuB,GAAT,CAAaT,GAAG,IACrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,GAAJ,CADA,CADqB,CADtB,EAMC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIV,MAAJ,CADA,CAND,EASA;AAAO,IAAA,KAAK,EAAEF,OAAd;AAAuB,IAAA,IAAI,EAAC,SAA5B;AAAsC,IAAA,QAAQ,EAAEe,CAAC,IAAID,QAAQ,CAACC,CAAD,CAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATA,EAUA;AAAQ,IAAA,OAAO,EAAE,MAAMI,OAAO,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVA,CADD;AAcA;;AAAA;AACD,eAAetB,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport io from \"socket.io-client\";\nimport logo from './logo.svg';\nimport './App.css';\n\nlet endPoint=\"http://127.0.0.1:5000/\";\nlet socket=io.connect(endPoint);\nfunction App(){\n\tconst [messages,setMessages]=useState([]);\n\tconst [message, setMessage]=useState(\"\");\n\tconst [typing,setTyping]=useState(\"\");\n\tuseEffect(()=>{\n\t\tgetMessages();\n\t}, [messages.length]);\n\tvar timeout=undefined;\n\tfunction timeoutFunction(){\n    \t\ttimeout = setTimeout(getTyping, 5000);\n\t}\n\tconst getMessages = () => {\n\t\tsocket.on(\"message\", msg => {\n\t\t\tsetMessages([...messages,msg]);\n\t\t});\n\t};\n\tconst getTyping = () => {\n\t\tsocket.on(\"typing\", type=>{\n\t\t\tsetTyping(type);\n\t\t});\n\t};\n\tconst onChange =e => {\n\t\tvar msg=e.target.value;\n\t\tsetMessage(msg);\n\t\tif (msg!=\"\"){\n\t\t\tsocket.emit(\"typing\",\"***typing noises***\");\n\t\t}else{\n\t\t\tsocket.emit(\"typing\",\"\");\n\t\t}\n\t};\n\tconst onClick = () => {\n\tif(message != \"\"){\n\t\tsocket.emit(\"message\",message);\n\t\tsetMessages([...messages,message]);\n\t\tsetMessage(\"\");\n\t}else{\n\t\talert(\"Please Add a Message\");\n\t}\n\t};\n\n\treturn(\n\t\t<div>\n\t\t{messages.length>0 && messages.map(msg => (\n\t\t\t<div>\n\t\t\t<p>{msg}</p>\n\t\t\t</div>\n\t\t))}\n\t\t\t<div>\n\t\t\t<p>{typing}</p>\n\t\t\t</div>\n\t\t<input value={message} name=\"message\" onChange={e => onChange(e)} />\n\t\t<button onClick={() => onClick()}>Send</button>\n\t\t</div>\n\t);\n};\nexport default App;\n"]},"metadata":{},"sourceType":"module"}